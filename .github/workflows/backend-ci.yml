name: Backend CI/CD

on:
  push:
    branches: [main]
    paths:
      - '**/*.js'
      - '**/*.ts'
      - 'package.json'
      - 'package-lock.json'
      - 'Dockerfile'
      - '.github/workflows/backend-ci.yml'

jobs:
  build-and-push:
    name: Build & Push Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install & test
        run: |
          npm ci
          npm test

      - name: Log in to Docker registry
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/backend
          TAG=latest
          docker build -t $IMAGE:$TAG .

      - name: Push Docker image
        run: |
          IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/backend
          TAG=latest
          docker push $IMAGE:$TAG

  deploy:
    name: Deploy to Droplet
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add Droplet to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Pull & restart backend
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          BACKEND_PATH: ${{ secrets.BACKEND_PATH }}
          IMAGE: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/backend
        run: |
          ssh -o ServerAliveInterval=60 $DEPLOY_USER@$DEPLOY_HOST << EOF
            cd $BACKEND_PATH
            git pull origin main
            # Pull the latest image
            sudo docker pull ${IMAGE}:latest

            # Restart only the backend container
            sudo docker-compose up -d --no-deps backend
          EOF
